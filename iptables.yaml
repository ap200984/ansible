---
- hosts: all
  become: true
  tasks:
    - name: Set the policy for the INPUT chain to ACCEPT
      ansible.builtin.iptables:
        chain: INPUT
        policy: ACCEPT

    - name: Iptables flush filter
      ansible.builtin.iptables:
        chain: "{{ item }}"
        flush: yes
      with_items: ["INPUT", "OUTPUT"]

    - name: Allow new incoming from localhost
      ansible.builtin.iptables:
        chain: INPUT
        source: 127.0.0.0/8
        jump: ACCEPT

    - name: Allow related and established connections
      ansible.builtin.iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT

    - name: Allow new incoming on UDP port 1701
      ansible.builtin.iptables:
        chain: INPUT
        protocol: udp
        destination_port: 1701
        jump: ACCEPT
        comment: Accept L2TP

    - name: Allow new incoming from 10.0.0.0/11
      ansible.builtin.iptables:
        chain: INPUT
        source: 10.0.0.0/11
        jump: ACCEPT
        comment: Accept internal network

    - name: Allow GRE from list
      ansible.builtin.iptables:
        chain: INPUT
        source: "{{ item }}"
        protocol: GRE
        jump: ACCEPT
        comment: Accept GRE from my hosts
      with_items:
        [
          "45.141.102.72",
          "45.35.14.80",
          "69.30.237.130",
          "86.110.170.70",
          "213.138.67.146",
        ]

    - name: Allow connections on multiple ports
      ansible.builtin.iptables:
        chain: INPUT
        protocol: tcp
        destination_ports:
          - "80"
          - "443"
          - "19022"
          - "1953"
          - "3000"
          - "5222"
          - "5269"
          - "5280"
          - "5443"
        jump: ACCEPT

    - name: DROP output to 10.0.0.0/11 not through tunnels
      ansible.builtin.iptables:
        chain: OUTPUT
        destination: 10.0.0.0/11
        out_interface: eth0
        jump: DROP
        comment: Drop packets to my network not from tunnels

    - name: Set the policy for the INPUT chain to DROP
      ansible.builtin.iptables:
        chain: INPUT
        policy: DROP

    - name: Save current state of the firewall in system file
      community.general.iptables_state:
        state: saved
        path: /etc/iptables.conf

    - name: add couchbase host to properties
      lineinfile:
        dest: /etc/network/interfaces
        line: iptables-restore < /etc/iptables.conf

# -P INPUT ACCEPT
# -P FORWARD DROP
# -P OUTPUT ACCEPT
# -N DOCKER
# -N DOCKER-ISOLATION-STAGE-1
# -N DOCKER-ISOLATION-STAGE-2
# -N DOCKER-USER
# -A FORWARD -j DOCKER-USER
# -A FORWARD -j DOCKER-ISOLATION-STAGE-1
# -A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# -A FORWARD -o docker0 -j DOCKER
# -A FORWARD -i docker0 ! -o docker0 -j ACCEPT
# -A FORWARD -i docker0 -o docker0 -j ACCEPT
# -A FORWARD -o br-4008c1205dd4 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# -A FORWARD -o br-4008c1205dd4 -j DOCKER
# -A FORWARD -i br-4008c1205dd4 ! -o br-4008c1205dd4 -j ACCEPT
# -A FORWARD -i br-4008c1205dd4 -o br-4008c1205dd4 -j ACCEPT
# -A DOCKER -d 172.20.240.1/32 ! -i br-4008c1205dd4 -o br-4008c1205dd4 -p tcp -m tcp --dport 8443 -j ACCEPT
# -A DOCKER -d 172.20.240.1/32 ! -i br-4008c1205dd4 -o br-4008c1205dd4 -p tcp -m tcp --dport 8080 -j ACCEPT
# -A DOCKER -d 172.20.240.2/32 ! -i br-4008c1205dd4 -o br-4008c1205dd4 -p udp -m udp --dport 1162 -j ACCEPT
# -A DOCKER -d 172.20.240.4/32 ! -i br-4008c1205dd4 -o br-4008c1205dd4 -p tcp -m tcp --dport 10051 -j ACCEPT
# -A DOCKER -d 172.20.240.1/32 ! -i br-4008c1205dd4 -o br-4008c1205dd4 -p tcp -m tcp --dport 80 -j ACCEPT
# -A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
# -A DOCKER-ISOLATION-STAGE-1 -i br-4008c1205dd4 ! -o br-4008c1205dd4 -j DOCKER-ISOLATION-STAGE-2
# -A DOCKER-ISOLATION-STAGE-1 -j RETURN
# -A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
# -A DOCKER-ISOLATION-STAGE-2 -o br-4008c1205dd4 -j DROP
# -A DOCKER-ISOLATION-STAGE-2 -j RETURN
# -A DOCKER-USER -j RETURN
