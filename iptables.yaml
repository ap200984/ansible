---
- hosts: all
  become: true
  vars_files:
    - secrets/common_secrets.yml
  tasks:
    - name: Install iptables, iptables-persistent, Fail2Ban & ipset
      apt:
        name:
          - "iptables"
          - "iptables-persistent"
          - "fail2ban"
          - "ipset"
        state: latest

    - name: Include secrets
      include_vars: secrets/common_secrets.yml

    - name: Set the policy for the INPUT chain to ACCEPT
      ansible.builtin.iptables:
        chain: INPUT
        policy: ACCEPT

    - name: Iptables flush filter
      ansible.builtin.iptables:
        chain: "{{ item }}"
        flush: yes
      with_items: ["INPUT", "OUTPUT"]

    - name: Allow new incoming from localhost
      ansible.builtin.iptables:
        chain: INPUT
        source: 127.0.0.0/8
        jump: ACCEPT

    - name: Allow related and established connections
      ansible.builtin.iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT

    - name: Create ipset for allowed_hosts
      ansible.builtin.command:
        cmd: "ipset create allowed_hosts hash:ip"
      ignore_errors: yes

    - name: Flush ipset to ensure it's empty before adding IPs
      ansible.builtin.command:
        cmd: "ipset flush allowed_hosts"

    - name: Add allowed IPs to ipset
      ansible.builtin.command:
        cmd: "ipset add allowed_hosts {{ item }}"
      loop: "{{ allowed_ips }}"

    - name: Allow traffic from allowed_hosts ipset to specific port
      ansible.builtin.iptables:
        chain: INPUT
        match_set: "allowed_hosts"
        match_set_flags: src
        jump: ACCEPT
        comment: "Accept connections to SSH port from allowed_hosts"

    - name: Allow connections on multiple ports
      ansible.builtin.iptables:
        chain: INPUT
        protocol: tcp
        destination_ports:
          - "80"
          - "443"
          - "19022"
          - "1953"
          - "3000"
          - "5222"
          - "5269"
          - "5280"
          - "5443"
          - "19022"
        jump: ACCEPT

    - name: DROP output to 10.0.0.0/11 not through tunnels
      ansible.builtin.iptables:
        chain: OUTPUT
        destination: 10.0.0.0/11
        out_interface: eth0
        jump: DROP
        comment: Drop packets to my network not from tunnels

    - name: Set the policy for the INPUT chain to DROP
      ansible.builtin.iptables:
        chain: INPUT
        policy: DROP

    - name: Save iptables configuration for Debian/Ubuntu
      become: yes
      shell: iptables-save > /etc/iptables/rules.v4
      args:
        executable: /bin/bash


    # - name: Save current state of the firewall in system file
    #   community.general.iptables_state:
    #     state: saved
    #     path: /etc/iptables.conf

    # - name: add couchbase host to properties
    #   lineinfile:
    #     dest: /etc/network/interfaces
    #     line: iptables-restore < /etc/iptables.conf


    - name: Configure SSH jail to use port 19022
      lineinfile:
        path: /etc/fail2ban/jail.local
        line: "port = 19022"
        insertafter: "[sshd]"
        create: yes
      notify: restart fail2ban
    - name: Create block_list ipset
      command: ipset create block_list hash:ip
      ignore_errors: yes
    - name: Apply custom Fail2Ban action to use block_list ipset
      copy:
        dest: /etc/fail2ban/action.d/blocklist.conf
        content: |
          [Definition]
          actionstart = ipset create block_list hash:ip
          actionstop =
          actioncheck =
          actionban = ipset add block_list <ip>
          actionunban = ipset del block_list <ip>
          [Init]
    - name: Configure sshd jail to use blocklist action and set max retry
      blockinfile:
        path: /etc/fail2ban/jail.local
        block: |
          [sshd]
          enabled = true
          port = 19022
          filter = sshd
          action = iptables[name=SSH, port=19022, protocol=tcp]
                  blocklist
          logpath = %(sshd_log)s
          maxretry = 5
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
      notify: restart fail2ban

  handlers:
    - name: restart fail2ban
      service:
        name: fail2ban
        state: restarted
