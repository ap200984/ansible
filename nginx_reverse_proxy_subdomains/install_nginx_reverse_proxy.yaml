---
- hosts: all
  become: true

  tasks:
    # - name: Include secrets
    #   include_vars: secrets/common_secrets.yml

    - name: Create nginx directory if it does not exist
      ansible.builtin.file:
        path: /etc/nginx/conf.d/
        state: directory

    - name: Synchronize config files
      ansible.builtin.synchronize:
        src: conf.d/
        dest: /etc/nginx/conf.d/
        recursive: yes
        delete: yes
        rsync_opts:
          - "--checksum"

    - name: nginx_proxy_container
      community.docker.docker_container:
        name: nginx_proxy
        image: "nginx"
        network_mode: host
        env:
          TZ: "UTC"
          LETSENCRYPT: "true"
          LE_EMAIL: "example@example.com"
          LE_FQDN: "vds2.space"
        ports:
          - 80:80/tcp
          - 443:443/tcp
        volumes:
          - /etc/nginx/conf.d:/etc/nginx/conf.d:rw
          - /etc/letsencrypt:/etc/letsencrypr:rw
        state: "started"
        restart_policy: "unless-stopped"
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

    - name: Reload NGINX configuration
      ansible.builtin.command:
        cmd: docker exec nginx_proxy nginx -s reload
    
    # - name: "certbot"
    #   community.docker.docker_container:
    #     name: "certbot"
    #     image: "certbot/certbot"
    #     volumes:
    #       - ./etc/certbot/conf:/etc/letsencrypt
    #       - ./etc/certbot/www:/var/www/certbot
    #     state: "started"
    #     restart_policy: "unless-stopped"
    #     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
