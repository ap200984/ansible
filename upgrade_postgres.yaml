---
- name: Upgrade PostgreSQL data directory from {{ postgres_initial_version }} to {{ postgres_desired_version }}
  hosts: localhost
  vars:
    postgres_initial_version: "15.8"
    postgres_desired_version: "17.0"
    postgres_data_dir: "/postgres"
    postgres_dump_file: "/tmp/postgres_dump.sql"
    postgres_container_name: "postgres-server"
    docker_network_name: "your_network_name"
    postgres_user: "zabbix"
    postgres_password: "zabbix2"
    postgres_db: "zabbix"
  tasks:
    - name: Stop the existing PostgreSQL container
      become: true
      community.docker.docker_container:
        name: "{{ postgres_container_name }}"
        state: stopped

    - name: Run temporary PostgreSQL {{ postgres_initial_version }} container to dump all databases
      become: true
      community.docker.docker_container:
        name: "postgres-dump"
        image: "postgres:{{ postgres_initial_version }}"
        volumes:
          - "{{ postgres_data_dir }}:/var/lib/postgresql/data"
        env:
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
          POSTGRES_DB: "{{ postgres_db }}"
        state: started
        restart_policy: unless-stopped

    - name: Wait for PostgreSQL to be ready
      become: true
      retries: 10
      delay: 5
      shell: |
        docker exec postgres-dump pg_isready -U {{ postgres_user }}
      register: pg_isready_output
      until: pg_isready_output.rc == 0

    - name: Dump all databases to file
      become: true
      shell: |
        docker exec postgres-dump pg_dumpall -U {{ postgres_user }} -f /tmp/postgres_dump.sql
      environment:
        PGPASSWORD: "{{ postgres_password }}"

    - name: Copy dump file from container to host
      become: true
      shell: |
        docker cp postgres-dump:/tmp/postgres_dump.sql {{ postgres_dump_file }}

    - name: Stop and remove temporary dump container
      become: true
      community.docker.docker_container:
        name: "postgres-dump"
        state: absent
        force_kill: yes
        keep_volumes: no  # Updated parameter

    - name: Rename old data directory
      become: true
      command: mv {{ postgres_data_dir }} {{ postgres_data_dir }}_{{ postgres_initial_version }}
      args:
        removes: "{{ postgres_data_dir }}"
        creates: "{{ postgres_data_dir }}_{{ postgres_initial_version }}"

    - name: Create new data directory
      become: true
      file:
        path: "{{ postgres_data_dir }}"
        state: directory
        owner: 999
        group: 999
        mode: '0700'

    - name: Start new PostgreSQL {{ postgres_desired_version }} container
      become: true
      community.docker.docker_container:
        name: "{{ postgres_container_name }}"
        image: "postgres:{{ postgres_desired_version }}"
        networks:
          - name: "{{ docker_network_name }}"
        env:
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
          POSTGRES_DB: "{{ postgres_db }}"
        ports:
          - "6432:5432"
        volumes:
          - "{{ postgres_data_dir }}:/var/lib/postgresql/data"
        state: started
        restart_policy: unless-stopped

    - name: Wait for new PostgreSQL to be ready
      become: true
      retries: 10
      delay: 5
      shell: |
        docker exec {{ postgres_container_name }} pg_isready -U {{ postgres_user }}
      register: pg_isready_output_new
      until: pg_isready_output_new.rc == 0

    - name: Copy dump file to new container
      become: true
      shell: |
        docker cp {{ postgres_dump_file }} {{ postgres_container_name }}:/tmp/postgres_dump.sql

    - name: Restore databases from dump file
      become: true
      shell: |
        docker exec {{ postgres_container_name }} psql -U {{ postgres_user }} -f /tmp/postgres_dump.sql
      environment:
        PGPASSWORD: "{{ postgres_password }}"

    - name: Remove dump file from host
      become: true
      file:
        path: "{{ postgres_dump_file }}"
        state: absent

    - name: Remove old data directory
      become: true
      file:
        path: "{{ postgres_data_dir }}_{{ postgres_initial_version }}"
        state: absent
